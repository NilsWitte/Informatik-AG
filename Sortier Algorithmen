import random


class SortAlgorithms():
    def insertion(self, values):
        i = 1
        while i < len(values):
            j = i
            while j > 0 and values[j - 1] > values[j]:
                temp = values[j]
                values[j] = values[j - 1]
                values[j - 1] = temp
                j = j - 1
            i = i + 1
        # return sorgt dafür, dass "values" gespeichert wird; sollte hier nichts oder "print(values)" stehen, würden die übergebenen Werte verloren gehen; so werden sie im Programm gespeichert
        return values

    def selection(self, list):
        i = 1
        while i < len(list):
            # Gehe durch die Liste
            for x in range(len(list)):
                minimum = x
                if list[x] < list[x + 1]:
                    temp = values[x]
                    values[x] = values[x + 1]
                    values[x + 1] = temp
            i += 1
        return list
        print(list)


values = [i for i in range(10)]
random.shuffle(values)
print(values)

sortAlgorithm = SortAlgorithms()
# hier wird die sortierte Liste außerhalb der Funktion gespeichert, damit sie nicht verloren gehen s.o.
sorted_values = sortAlgorithm.insertion(values)
print(sorted_values)
